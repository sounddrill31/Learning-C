name: Compile Turbo C++ Code and Create Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to trigger the workflow'
        required: true
        default: 'main'
      exe_file:
        description: '.exe file name'
        required: true
      source_file:
        description: 'Source file name'
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [16.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Setup UCC Compiler
        run: |
          mkdir ~/sources
          cp ${{ github.event.inputs.source_file }} ~/sources/
          wget https://github.com/sounddrill31/Learning-C/raw/actions/script.sh
          chmod +x script.sh
          ./script.sh
      - name: Compile
        run: |
        ucc -b ${{ github.event.inputs.source_file }}
     # - name: Install DosBox-X
     #   run: sudo snap install dosbox-x
     # - name: Compile Code
     #   uses: joncloud/dos-build-action@v1
     #   with:
     #     run:
     #         |
     #       C:
     #       CD SRC
     #       TCC ${{ github.event.inputs.source_file }} 
      #    programs: |
      #       $/turbo-c++/3.00:C:\TCC
      #       sample:C:\SRC
      #- name: Collect compiled output
      #  run: |
      #    cp /workspace/${{ github.event.inputs.exe_file }} $GITHUB_WORKSPACE/${{ github.event.inputs.exe_file }}
      #- name: Setup Upterm Session
      #  uses: lhotari/action-upterm@v1
      - name: Upload compiled binary
        uses: actions/upload-artifact@v2
        with:
          name: compiled-binary
          path: ~/builds/${{ github.event.inputs.exe_file }}

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ github.workspace }}/${{ github.event.inputs.exe_file }}
          tag_name: ${{ github.event.inputs.source_file }}
          name: Compiled Code
